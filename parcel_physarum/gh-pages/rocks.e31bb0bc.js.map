{"version":3,"sources":["node_modules/twgl.js/dist/4.x/twgl-full.module.js","feromone.frag","cell.frag","draw.frag","index.js","../../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["VecType","Float32Array","setDefaultType","ctor","oldType","create","x","y","z","dst","add","a","b","subtract","lerp","t","lerpV","max","Math","min","mulScalar","v","k","divScalar","cross","t1","t2","dot","length$1","sqrt","lengthSq","distance","dx","dy","dz","distanceSq","normalize","lenSq","len","negate","copy","multiply","divide","v3","Object","freeze","__proto__","length","MatType","setDefaultType$1","negate$1","m","copy$1","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","d","multiply$1","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","getTranslation","getAxis","axis","off","setAxis","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","tan","PI","rangeInv","ortho","left","right","bottom","top","near","far","frustum","xAxis","yAxis","zAxis","lookAt","eye","target","up","translation","translate","v0","v1","v2","rotationX","angleInRadians","c","cos","s","sin","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","n","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal","mi","m4","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","glTypeToTypedArray","tt","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","getGLTypeForTypedArray","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","type","CTOR","isArrayBuffer","SharedArrayBuffer","isArrayBufferOrSharedArrayBuffer","buffer","ArrayBuffer","typedarrays","copyNamedProperties","names","src","forEach","name","value","undefined","copyExistingProperties","keys","key","hasOwnProperty","error","args","console","warn","isBuffer","gl","WebGLBuffer","isRenderbuffer","WebGLRenderbuffer","isShader","WebGLShader","isTexture","WebGLTexture","isSampler","WebGLSampler","STATIC_DRAW","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","BUFFER_SIZE","BYTE$1","UNSIGNED_BYTE$1","SHORT$1","UNSIGNED_SHORT$1","INT$1","UNSIGNED_INT$1","FLOAT$1","defaults","attribPrefix","setAttributePrefix","prefix","setDefaults","newDefaults","setBufferFromTypedArray","array","drawType","bindBuffer","bufferData","createBufferFromTypedArray","createBuffer","isIndices","getNormalizationForTypedArray","getNormalizationForTypedArrayType","getArray","data","texcoordRE","colorRE","guessNumComponentsFromName","numComponents","test","getNumComponents","arrayName","size","makeTypedArray","Array","isArray","Type","createAttribsFromArrays","arrays","attribs","attribName","attrib","normalization","numValues","arrayType","numBytes","BYTES_PER_ELEMENT","stride","offset","divisor","setAttribInfoBufferFromArray","attribInfo","bufferSubData","getBytesPerValueForGLType","positionKeys","getNumElementsFromNonIndexedArrays","ii","numElements","getNumElementsFromAttributes","getBufferParameter","bytesPerValue","totalElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","indices","newIndices","elementType","createBufferFromArray","createBuffersFromArrays","buffers","attributes","setAttributeDefaults_","getNumComponents_","getArray_","getArray$1","getNumComponents$1","augmentTypedArray","cursor","push","arguments","jj","reset","opt_index","defineProperty","get","createAugmentedTypedArray","opt_type","allButIndices","deindexVertices","vertices","newVertices","expandToUnindexed","channel","srcBuffer","dstBuffer","constructor","ndx","filter","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","applyFuncToV3Array","matrix","fn","tmp","transformNormal$1","reorientDirections","reorientNormals","reorientPositions","reorientVertices","indexOf","createXYQuadVertices","xOffset","yOffset","position","texcoord","createPlaneVertices","width","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","createSphereVertices","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","numVertsAround","CUBE_FACE_INDICES","createCubeVertices","cornerVertices","faceNormals","uvCoords","faceIndices","uv","createTruncatedConeVertices","bottomRadius","topRadius","height","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","start","end","ringRadius","expandRLEData","rleData","padding","runLength","element","slice","apply","create3DFVertices","colors","numVerts","color","createCrescentVertices","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","createCylinderVertices","createTorusVertices","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","nextRingIndex","nextSliceIndex","createDiscVertices","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","i","randInt","random","makeRandomVertexColors","options","vColors","rand","numVertsPerColor","vertsPerColor","numSets","createBufferFunc","prototype","call","createBufferInfoFunc","arraySpecPropertyNames","copyElements","dstNdx","createArrayOfSameType","srcArray","arraySrc","newArray","newArraySpec","concatVertices","arrayOfArrays","baseName","arrayInfo","getLengthOfCombinedArrays","arraySpec","spec","copyArraysToNewArray","base","baseIndex","newArrays","info","duplicateVertices","create3DFBufferInfo","create3DFBuffers","createCubeBufferInfo","createCubeBuffers","createPlaneBufferInfo","createPlaneBuffers","createSphereBufferInfo","createSphereBuffers","createTruncatedConeBufferInfo","createTruncatedConeBuffers","createXYQuadBufferInfo","createXYQuadBuffers","createCrescentBufferInfo","createCrescentBuffers","createCylinderBufferInfo","createCylinderBuffers","createTorusBufferInfo","createTorusBuffers","createDiscBufferInfo","createDiscBuffers","createCresentBufferInfo","createCresentBuffers","createCresentVertices","primitives","isWebGL2","texStorage2D","isWebGL1","glEnumToString","haveEnumsForType","enums","addEnums","existing","toString","utils","defaults$1","textureColor","textureOptions","crossOrigin","isArrayBuffer$1","getShared2DContext","s_ctx","document","createElement","getContext","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","CLAMP_TO_EDGE","NEAREST","LINEAR","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","UNPACK_ALIGNMENT","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB565","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB5_A1","RGBA4","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","DEPTH24_STENCIL8","BYTE$2","UNSIGNED_BYTE$2","SHORT$2","UNSIGNED_SHORT$2","INT$2","UNSIGNED_INT$2","FLOAT$2","UNSIGNED_SHORT_4_4_4_4$1","UNSIGNED_SHORT_5_5_5_1$1","UNSIGNED_SHORT_5_6_5$1","HALF_FLOAT$1","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV$1","UNSIGNED_INT_10F_11F_11F_REV$1","UNSIGNED_INT_5_9_9_9_REV$1","FLOAT_32_UNSIGNED_INT_24_8_REV$1","UNSIGNED_INT_24_8$1","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","formatInfo","numColorComponents","s_textureInternalFormatInfo","getTextureInternalFormatInfo","internalFormat","textureFormat","colorRenderable","textureFilterable","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","format","isPowerOf2","canGenerateMipmap","canFilter","getNumComponentsForFormat","getTextureTypeForArrayType","defaultType","guessDimensions","setDefaultTextureColor","setDefaults$1","setPackState","colorspaceConversion","pixelStorei","premultiplyAlpha","flipY","setSkipStateToDefault","setTextureSamplerParameters","parameteriFn","minMag","mag","wrap","wrapR","wrapS","wrapT","minLod","maxLod","baseLevel","maxLevel","setTextureParameters","tex","bindTexture","texParameteri","setSamplerParameters","sampler","samplerParameteri","createSampler","createSamplers","samplerOptions","samplers","make1Pixel","setTextureFilteringForSize","generateMipmap","filtering","shouldAutomaticallySetTextureFilteringForSize","auto","level","getCubeFaceOrder","cubeFaceOrder","getCubeFacesWithNdx","faces","facesWithNdx","map","face","sort","setTextureFromElement","formatType","imgWidth","imgHeight","slices","nodeName","ctx","canvas","drawImage","texImage2D","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","noop","urlIsSameOrigin","url","href","hostname","location","port","protocol","localOrigin","URL","origin","urlOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","loadImage","callback","img","Image","clearEventHandlers","removeEventListener","onError","onLoad","msg","addEventListener","ImageBitmap","err","bm","cb","mode","fetch","response","ok","blob","bitmap","setTimeout","catch","e","isTexImageSource","obj","ImageData","HTMLElement","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","errors","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","setTextureFromArray","byteLength","dimensions","cbrt","unpackAlignment","elementsPerElement","faceSize","subarray","setEmptyTexture","createTexture","resizeTexture","isAsyncSrc","createTextures","numDownloading","textures","images","callCallbackIfReady","onLoadFn","setTextureDefaults_","error$1","warn$1","getElementById","id","TEXTURE0","DYNAMIC_DRAW","ARRAY_BUFFER$1","ELEMENT_ARRAY_BUFFER$1","UNIFORM_BUFFER","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT$3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT$3","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT$3","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D$1","TEXTURE_CUBE_MAP$1","TEXTURE_3D$1","TEXTURE_2D_ARRAY$1","typeMap","getBindPointForSamplerType","bindPoint","floatSetter","uniform1f","floatArraySetter","uniform1fv","floatVec2Setter","uniform2fv","floatVec3Setter","uniform3fv","floatVec4Setter","uniform4fv","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","uintSetter","uniform1ui","uintArraySetter","uniform1uiv","uintVec2Setter","uniform2uiv","uintVec3Setter","uniform3uiv","uintVec4Setter","uniform4uiv","floatMat2Setter","uniformMatrix2fv","floatMat3Setter","uniformMatrix3fv","floatMat4Setter","uniformMatrix4fv","floatMat23Setter","uniformMatrix2x3fv","floatMat32Setter","uniformMatrix3x2fv","floatMat24Setter","uniformMatrix2x4fv","floatMat42Setter","uniformMatrix4x2fv","floatMat34Setter","uniformMatrix3x4fv","floatMat43Setter","uniformMatrix4x3fv","samplerSetter","unit","textureOrPair","texture","activeTexture","bindSampler","samplerArraySetter","units","index","setter","arraySetter","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","count","rowOffset","attrTypeMap","errorRE","addLineNumbersWithError","log","lineOffset","matches","matchAll","lineNoToErrorMap","Map","lineNo","parseInt","next","substring","split","line","join","spaceRE","loadShader","shaderSource","shaderType","opt_errorCallback","errFn","shader","createShader","replace","compileShader","compiled","getShaderParameter","lastError","getShaderInfoLog","deleteShader","getProgramOptions","opt_attribs","opt_locations","transformFeedbackVaryings","transformFeedbackMode","errorCallback","opt","attribLocations","defaultShaderType","getShaderTypeFromScriptType","scriptType","deleteShaders","shaders","createProgram","progOptions","realShaders","newShaders","elem","text","program","attachShader","bindAttribLocation","varyings","linkProgram","linked","getProgramParameter","getProgramInfoLog","getShaderSource","SHADER_TYPE","deleteProgram","createShaderFromScript","scriptId","opt_shaderType","shaderScript","createProgramFromScripts","shaderScriptIds","createProgramFromSources","shaderSources","isBuiltIn","startsWith","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","endsWith","uniformSetters","numUniforms","getActiveUniform","substr","getUniformLocation","createTransformFeedbackInfo","numVaryings","varying","getTransformFeedbackVarying","bindTransformFeedbackInfo","transformFeedbackInfo","buf","bindBufferRange","bindBufferBase","createTransformFeedback","programInfo","tf","bindTransformFeedback","useProgram","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","getActiveUniformBlockName","blockSpec","getUniformBlockIndex","usedByVertexShader","getActiveUniformBlockParameter","usedByFragmentShader","used","arraySuffixRE","pad","createUniformBlockUniformSetter","view","typeSize","paddedSize","numPaddedElements","set","createUniformBlockInfoFromProgram","uniformBlockSpec","blockName","uniforms","uniformBufferIndex","uniformBlockBinding","setters","uniformNdx","uniformView","asFloat","createUniformBlockInfo","bindUniformBlock","uniformBlockInfo","bufferBindIndex","setUniformBlock","setBlockUniforms","values","setUniforms","actualSetters","numArgs","aNdx","setUniformsAndBindTextures","createAttributeSetters","attribSetters","numAttribs","getActiveAttrib","getAttribLocation","setAttributes","setBuffersAndAttributes","vertexArrayObject","bindVertexArray","createProgramInfoFromProgram","createProgramInfo","good","source","script","programs","TRIANGLES","UNSIGNED_SHORT$3","drawBufferInfo","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","vertexArrayInfo","bindBuffers","draw","FRAMEBUFFER","RENDERBUFFER","TEXTURE_2D$2","UNSIGNED_BYTE$3","DEPTH_COMPONENT$1","RGBA$1","DEPTH_COMPONENT24$1","DEPTH_COMPONENT32F$1","DEPTH24_STENCIL8$1","DEPTH32F_STENCIL8$1","RGBA4$1","RGB5_A1$1","RGB565$1","DEPTH_COMPONENT16$1","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL$1","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","CLAMP_TO_EDGE$1","LINEAR$1","defaultAttachments","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","createFramebufferInfo","attachments","fb","createFramebuffer","bindFramebuffer","drawingBufferWidth","drawingBufferHeight","colorAttachmentCount","framebufferInfo","framebuffer","attachmentOptions","attachment","attachmentPoint","createRenderbuffer","bindRenderbuffer","renderbufferStorage","framebufferRenderbuffer","layer","framebufferTextureLayer","framebufferTexture2D","resizeFramebufferInfo","bindFramebufferInfo","viewport","framebuffers","ELEMENT_ARRAY_BUFFER$2","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","vertexArrays","defaults$2","addExtensionsToContext","setDefaults$2","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","origFn","supportedExtensions","create3DContext","context","getWebGLContext","createContext","resizeCanvasToDisplaySize","multiplier","clientWidth","clientHeight","module","exports","twgl","require","fFeromone","vCell","fCell","fDraw","mousepos","tick","antialias","programCell","programFeromone","programDraw","cell1","cell2","feromone1","feromone2","positionObject","positionBuffer","pointData","j","pointsObject","v_texcoord","pointsBuffer","dt","prevTime","temp","offGravity","restoreColors","time","prevStateCells","prevStateFeromones","u_time","Date","u_resolution","u_mouse","TRIANGLE_FAN","animate","now","requestAnimationFrame","setMousePos","clientX","clientY","button","window","handleTouch","preventDefault","touches","passive","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","overlay","createErrorOverlay","body","appendChild","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","concat","Function","deps","cached","cache","some"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,uBAAT,CAAiCnD,EAAjC,EAAqCoD,MAArC,EAA6C;AAC3C,QAAMC,OAAO,GAAG,EAAhB;AACAzQ,EAAAA,MAAM,CAAC4M,IAAP,CAAY4D,MAAZ,EAAoBjE,OAApB,CAA4B,UAAS0D,SAAT,EAAoB;AAC9C,QAAI,CAACX,SAAS,CAACW,SAAD,CAAd,EAA2B;AACzB,YAAMjB,KAAK,GAAGwB,MAAM,CAACP,SAAD,CAApB;AACA,YAAMS,UAAU,GAAG1B,KAAK,CAAC2B,MAAN,IAAgB3B,KAAK,CAACxC,IAAtB,IAA8BwC,KAAK,CAAC0B,UAApC,IAAmDjC,QAAQ,CAACC,YAAT,GAAwBuB,SAA9F;;AACA,UAAIjB,KAAK,CAACvC,KAAV,EAAiB;AACf,YAAI,CAAC2D,KAAK,C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Ab,EAAAA,EAAE,CAAC8B,UAAH,CAAcnB,YAAd,EAA4B,IAA5B;AAEA,QAAM+D,aAAa,GAAGP,yBAAyB,CAACnE,EAAD,EAAKuD,MAAM,CAAC/E,IAAZ,CAA/C;AACA,QAAMmG,aAAa,GAAGhB,QAAQ,GAAGe,aAAjC;AACA,QAAMhC,aAAa,GAAGa,MAAM,CAACb,aAAP,IAAwBa,MAAM,CAACT,IAArD,CAvBiD,CAwBjD;;AACA,QAAMyB,WAAW,GAAGI,aAAa,GAAGjC,aAApC;;AACA,MAAI6B,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AACzB,UAAM,IAAInG,KAAJ,CAAW,iBAAgBsE,aAAc,2BAA0B3P,MAAO,EAA1E,CAAN;AACD;;AACD,SAAOwR,WAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,0BAAT,CAAoC5E,EAApC,EAAwCoD,MAAxC,EAAgDyB,aAAhD,EAA+D;AAC7D,QAAMC,UAAU,GAAG3B,uBAAuB,CAACnD,EAAD,EAAKoD,MAAL,CAA1C;AACA,QAAM2B,UAAU,GAAGnS,MAAM,CAACoS,MAAP,CAAc,EAAd,EAAkBH,aAAa,GAAGA,aAAH,GAAmB,EAAlD,CAAnB;AACAE,EAAAA,UAAU,CAAC1B,OAAX,GAAqBzQ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c,EAAEA,cArC0B;AAsC1CyJ,EAAAA,sBAAsB,EAAEA,sBAtCkB;AAuC1CpI,EAAAA,kBAAkB,EAAEA,kBAvCsB;AAwC1CC,EAAAA,eAAe,EAAEA,eAxCyB;AAyC1CC,EAAAA,iBAAiB,EAAEA,iBAzCuB;AA0C1CC,EAAAA,gBAAgB,EAAEA,gBA1CwB;AA2C1CoJ,EAAAA,cAAc,EAAEA,cA3C0B;AA4C1CY,EAAAA,iBAAiB,EAAEA;AA5CuB,CAAd,CAA9B;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASyB,QAAT,CAAkBpU,EAAlB,EAAsB;AACpB;AACA;AACA;AACA;AACA,SAAO,CAAC,CAACA,EAAE,CAACqU,YAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBtU,EAAlB,EAAsB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAO,CAACA,EAAE,CAACqU,YAAX;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,cAAc,GAAI,YAAW;AACjC,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,KAAK,GAAG,EAAd;;AAEA,WAASC,QAAT,CAAkB1U,EAAlB,EAAsB;AACpB,UAAMxB,IAAI,GAAGwB,EAAE,CAACgH,WAAH,CAAe5H,IAA5B;;AACA,QAAI,CAACoV,gBAAgB,CAAChW,IAAD,CAArB,EAA6B;AAC3B,WAAK,MAAMiB,GAAX,IAAkBO,EAAlB,EAAsB;AACpB,YAAI,OAAOA,EAAE,CAACP,GAAD,CAAT,KAAmB,QAAvB,EAAiC;AAC/B,gBAAMkV,QAAQ,GAAGF,KAAK,CAACzU,EAAE,CAACP,GAAD,CAAH,CAAtB;AACAgV,UAAAA,KAAK,CAACzU,EAAE,CAACP,GAAD,CAAH,CAAL,GAAiBkV,QAAQ,GAAI,GAAEA,QAAS,MAAKlV,GAAI,EAAxB,GAA4BA,GAArD;AACD;AACF;;AACD+U,MAAAA,gBAAgB,CAAChW,IAAD,CAAhB,GAAyB,IAAzB;AACD;AACF;;AAED,SAAO,SAAS+V,cAAT,CAAwBvU,EAAxB,EAA4BX,KAA5B,EAAmC;AACxCqV,IAAAA,QAAQ,CAAC1U,EAAD,CAAR;AACA,WAAOyU,KAAK,CAACpV,KAAD,CAAL,KAAiB,OAAOA,KAAP,KAAiB,QAAjB,GAA6B,KAAIA,KAAK,CAACuV,QAAN,CAAe,EAAf,CAAmB,EAApD,GAAwDvV,KAAzE,CAAP;AACD,GAHD;AAID,CArBuB,EAAxB;;;AAuBA,IAAIwV,KAAK,GAAG,aAAajiB,MAAM,CAACC,MAAP,CAAc;AACrCC,EAAAA,SAAS,EAAE,IAD0B;AAErCyhB,EAAAA,cAAc,EAAEA,cAFqB;AAGrCD,EAAAA,QAAQ,EAAEA,QAH2B;AAIrCF,EAAAA,QAAQ,EAAEA;AAJ2B,CAAd,CAAzB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMU,UAAU,GAAG;AACjBC,EAAAA,YAAY,EAAE,IAAInX,UAAJ,CAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAf,CADG;AAEjBoX,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,WAAW,EAAE3V;AAHI,CAAnB;AAKA,MAAM4V,eAAe,GAAGxW,aAAxB,EAEA;;AACA,MAAMyW,kBAAkB,GAAG,YAAW;AACpC,MAAIC,KAAJ;AACA,SAAO,SAASD,kBAAT,GAA8B;AACnCC,IAAAA,KAAK,GAAGA,KAAK,KACP,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACC,aAA7C,GACGD,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,UAAjC,CAA4C,IAA5C,CADH,GAEG,IAHK,CAAb;AAIA,WAAOH,KAAP;AACD,GAND;AAOD,CAT0B,EAA3B,EAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,MAAMI,KAAK,GAA4B,MAAvC;AACA,MAAMC,GAAG,GAA8B,MAAvC;AACA,MAAMC,IAAI,GAA6B,MAAvC;AACA,MAAMC,SAAS,GAAwB,MAAvC;AACA,MAAMC,eAAe,GAAkB,MAAvC;AACA,MAAMC,eAAe,GAAkB,MAAvC;AACA,MAAMC,aAAa,GAAoB,MAAvC;AAEA;AACA;AACA;;AACA,MAAMC,aAAa,GAAoB,MAAvC;AAEA;;AACA,MAAMC,OAAO,GAA0B,MAAvC;AACA,MAAMC,MAAM,GAA2B,MAAvC;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AACA,MAAMC,UAAU,GAAuB,MAAvC;AACA,MAAMC,gBAAgB,GAAiB,MAAvC;AACA,MAAMC,UAAU,GAAuB,MAAvC;AACA,MAAMC,gBAAgB,GAAiB,MAAvC;AAEA;;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AACA,MAAMC,2BAA2B,GAAM,MAAvC;AAEA;;AACA,MAAMC,kBAAkB,GAAe,MAAvC;AACA,MAAMC,kBAAkB,GAAe,MAAvC;AACA,MAAMC,cAAc,GAAmB,MAAvC;AACA,MAAMC,cAAc,GAAmB,MAAvC;AACA,MAAMC,cAAc,GAAmB,MAAvC;AACA,MAAMC,eAAe,GAAkB,MAAvC;AACA,MAAMC,eAAe,GAAkB,MAAvC;AACA,MAAMC,kBAAkB,GAAe,MAAvC;AACA,MAAMC,iBAAiB,GAAgB,MAAvC;AAGA;;AACA,MAAMC,gBAAgB,GAAqB,MAA3C;AACA,MAAMC,iBAAiB,GAAoB,MAA3C;AACA,MAAMC,mBAAmB,GAAkB,MAA3C;AACA,MAAMC,kBAAkB,GAAmB,MAA3C;AACA,MAAMC,gBAAgB,GAAqB,MAA3C;AACA,MAAMC,kBAAkB,GAAmB,MAA3C;AACA,MAAMC,kCAAkC,GAAG,MAA3C;AACA,MAAMC,8BAA8B,GAAO,MAA3C;AACA,MAAMC,mBAAmB,GAAkB,MAA3C;AAEA,MAAMC,EAAE,GAA6B,MAArC;AACA,MAAMC,QAAQ,GAAuB,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,GAAG,GAA4B,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,GAAG,GAA4B,MAArC;AACA,MAAMC,SAAS,GAAsB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,IAAI,GAA2B,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,UAAU,GAAqB,MAArC;AACA,MAAMC,cAAc,GAAiB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,YAAY,GAAmB,MAArC;AACA,MAAMC,WAAW,GAAoB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,KAAK,GAA0B,MAArC;AACA,MAAMC,QAAQ,GAAuB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,MAAM,GAAyB,MAArC;AACA,MAAMC,UAAU,GAAqB,MAArC;AACA,MAAMC,QAAQ,GAAuB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,OAAO,GAAwB,MAArC;AACA,MAAMC,QAAQ,GAAuB,MAArC;AAEA,MAAMC,iBAAiB,GAAc,MAArC;AACA,MAAMC,iBAAiB,GAAc,MAArC;AACA,MAAMC,kBAAkB,GAAa,MAArC;AACA,MAAMC,iBAAiB,GAAc,MAArC;AACA,MAAMC,gBAAgB,GAAe,MAArC;AAEA;;AACA,MAAMC,MAAM,GAA2B,MAAvC;AACA,MAAMC,eAAe,GAAkB,MAAvC;AACA,MAAMC,OAAO,GAA0B,MAAvC;AACA,MAAMC,gBAAgB,GAAiB,MAAvC;AACA,MAAMC,KAAK,GAA4B,MAAvC;AACA,MAAMC,cAAc,GAAmB,MAAvC;AACA,MAAMC,OAAO,GAA0B,MAAvC;AACA,MAAMC,wBAAwB,GAAS,MAAvC;AACA,MAAMC,wBAAwB,GAAS,MAAvC;AACA,MAAMC,sBAAsB,GAAW,MAAvC;AACA,MAAMC,YAAY,GAAqB,MAAvC;AACA,MAAMC,cAAc,GAAiB,MAArC,EAA8C;;AAC9C,MAAMC,6BAA6B,GAAI,MAAvC;AACA,MAAMC,8BAA8B,GAAG,MAAvC;AACA,MAAMC,0BAA0B,GAAO,MAAvC;AACA,MAAMC,gCAAgC,GAAG,MAAzC;AACA,MAAMC,mBAAmB,GAAc,MAAvC;AAEA,MAAMC,EAAE,GAA6B,MAArC;AACA,MAAMC,UAAU,GAAqB,MAArC;AACA,MAAMC,GAAG,GAA4B,MAArC;AACA,MAAMC,WAAW,GAAoB,MAArC;AACA,MAAMC,WAAW,GAAoB,MAArC;AACA,MAAMC,YAAY,GAAmB,MAArC;AAEA,MAAMC,UAAU,GAAG,EAAnB;AACA;AACE;AACA;AACA,QAAM5jB,CAAC,GAAG4jB,UAAV;AACA5jB,EAAAA,CAAC,CAACyc,KAAD,CAAD,GAAqB;AAAEoH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC4c,SAAD,CAAD,GAAqB;AAAEiH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC6c,eAAD,CAAD,GAAqB;AAAEgH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC0c,GAAD,CAAD,GAAqB;AAAEmH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC2c,IAAD,CAAD,GAAqB;AAAEkH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAACwjB,GAAD,CAAD,GAAqB;AAAEK,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAACyjB,WAAD,CAAD,GAAqB;AAAEI,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAACsjB,EAAD,CAAD,GAAqB;AAAEO,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAACujB,UAAD,CAAD,GAAqB;AAAEM,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC0c,GAAD,CAAD,GAAqB;AAAEmH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC0jB,WAAD,CAAD,GAAqB;AAAEG,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC2c,IAAD,CAAD,GAAqB;AAAEkH,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC2jB,YAAD,CAAD,GAAqB;AAAEE,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC8c,eAAD,CAAD,GAAqB;AAAE+G,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACA7jB,EAAAA,CAAC,CAAC+c,aAAD,CAAD,GAAqB;AAAE8G,IAAAA,kBAAkB,EAAE;AAAtB,GAArB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,2BAAJ;;AACA,SAASC,4BAAT,CAAsCC,cAAtC,EAAsD;AACpD,MAAI,CAACF,2BAAL,EAAkC;AAChC;AACA,UAAM9rB,CAAC,GAAG,EAAV,CAFgC,CAGhC;;AACAA,IAAAA,CAAC,CAACykB,KAAD,CAAD,GAAwB;AAAEwH,MAAAA,aAAa,EAAExH,KAAjB;AAAkCyH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBS,YAAlB,EAAgCC,cAAhC,EAAgDL,OAAhD;AAAhI,KAAxB;AACA3qB,IAAAA,CAAC,CAAC4kB,SAAD,CAAD,GAAwB;AAAEqH,MAAAA,aAAa,EAAErH,SAAjB;AAAkCsH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBS,YAAlB,EAAgCC,cAAhC,EAAgDL,OAAhD;AAAhI,KAAxB;AACA3qB,IAAAA,CAAC,CAAC6kB,eAAD,CAAD,GAAwB;AAAEoH,MAAAA,aAAa,EAAEpH,eAAjB;AAAkCqH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBS,YAAlB,EAAgCC,cAAhC,EAAgDL,OAAhD;AAAhI,KAAxB;AACA3qB,IAAAA,CAAC,CAAC0kB,GAAD,CAAD,GAAwB;AAAEuH,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBS,YAAlB,EAAgCC,cAAhC,EAAgDL,OAAhD,EAAyDG,sBAAzD;AAAhI,KAAxB;AACA9qB,IAAAA,CAAC,CAAC2kB,IAAD,CAAD,GAAwB;AAAEsH,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBS,YAAlB,EAAgCC,cAAhC,EAAgDL,OAAhD,EAAyDC,wBAAzD,EAAmFC,wBAAnF;AAAhI,KAAxB;AACA7qB,IAAAA,CAAC,CAAC8kB,eAAD,CAAD,GAAwB;AAAEmH,MAAAA,aAAa,EAAEnH,eAAjB;AAAkCoH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAA0H3e,MAAAA,IAAI,EAAE,CAACid,cAAD,EAAiBF,gBAAjB;AAAhI,KAAxB,CATgC,CAWhC;;AACAxqB,IAAAA,CAAC,CAAC+mB,EAAD,CAAD,GAAwB;AAAEkF,MAAAA,aAAa,EAAET,GAAjB;AAAkCU,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAACgnB,QAAD,CAAD,GAAwB;AAAEiF,MAAAA,aAAa,EAAET,GAAjB;AAAkCU,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAACinB,IAAD,CAAD,GAAwB;AAAEgF,MAAAA,aAAa,EAAET,GAAjB;AAAkCU,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV;AAAvH,KAAxB;AACA/qB,IAAAA,CAAC,CAACknB,IAAD,CAAD,GAAwB;AAAE+E,MAAAA,aAAa,EAAET,GAAjB;AAAkCU,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD;AAAvH,KAAxB;AACA3qB,IAAAA,CAAC,CAACmnB,IAAD,CAAD,GAAwB;AAAE8E,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAAConB,GAAD,CAAD,GAAwB;AAAE6E,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAAC+nB,KAAD,CAAD,GAAwB;AAAEkE,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC+c,gBAAD;AAAvH,KAAxB;AACAxqB,IAAAA,CAAC,CAACgoB,IAAD,CAAD,GAAwB;AAAEiE,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC8c,OAAD;AAAvH,KAAxB;AACAvqB,IAAAA,CAAC,CAACioB,KAAD,CAAD,GAAwB;AAAEgE,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACid,cAAD;AAAvH,KAAxB;AACA1qB,IAAAA,CAAC,CAACkoB,IAAD,CAAD,GAAwB;AAAE+D,MAAAA,aAAa,EAAER,WAAjB;AAAkCS,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACgd,KAAD;AAAvH,KAAxB;AACAzqB,IAAAA,CAAC,CAACynB,GAAD,CAAD,GAAwB;AAAEwE,MAAAA,aAAa,EAAEX,EAAjB;AAAkCY,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAAC0nB,SAAD,CAAD,GAAwB;AAAEuE,MAAAA,aAAa,EAAEX,EAAjB;AAAkCY,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAAC2nB,KAAD,CAAD,GAAwB;AAAEsE,MAAAA,aAAa,EAAEX,EAAjB;AAAkCY,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV;AAAvH,KAAxB;AACA/qB,IAAAA,CAAC,CAAC4nB,KAAD,CAAD,GAAwB;AAAEqE,MAAAA,aAAa,EAAEX,EAAjB;AAAkCY,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD;AAAvH,KAAxB;AACA3qB,IAAAA,CAAC,CAAC6nB,KAAD,CAAD,GAAwB;AAAEoE,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAAC8nB,IAAD,CAAD,GAAwB;AAAEmE,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAACqnB,MAAD,CAAD,GAAwB;AAAE4E,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC+c,gBAAD;AAAvH,KAAxB;AACAxqB,IAAAA,CAAC,CAACsnB,KAAD,CAAD,GAAwB;AAAE2E,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC8c,OAAD;AAAvH,KAAxB;AACAvqB,IAAAA,CAAC,CAACunB,MAAD,CAAD,GAAwB;AAAE0E,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACid,cAAD;AAAvH,KAAxB;AACA1qB,IAAAA,CAAC,CAACwnB,KAAD,CAAD,GAAwB;AAAEyE,MAAAA,aAAa,EAAEV,UAAjB;AAAkCW,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACgd,KAAD;AAAvH,KAAxB;AACAzqB,IAAAA,CAAC,CAACmoB,IAAD,CAAD,GAAwB;AAAE8D,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAACooB,KAAD,CAAD,GAAwB;AAAE6D,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAACqoB,MAAD,CAAD,GAAwB;AAAE4D,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBQ,sBAAlB;AAAvH,KAAxB;AACA9qB,IAAAA,CAAC,CAACsoB,UAAD,CAAD,GAAwB;AAAE2D,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAACuoB,cAAD,CAAD,GAAwB;AAAE0D,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV,EAAwBG,8BAAxB;AAAvH,KAAxB;AACAlrB,IAAAA,CAAC,CAACwoB,OAAD,CAAD,GAAwB;AAAEyD,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV,EAAwBI,0BAAxB;AAAvH,KAAxB;AACAnrB,IAAAA,CAAC,CAACyoB,MAAD,CAAD,GAAwB;AAAEwD,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,CAAL,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV;AAAvH,KAAxB;AACA/qB,IAAAA,CAAC,CAAC0oB,MAAD,CAAD,GAAwB;AAAEuD,MAAAA,aAAa,EAAEvH,GAAjB;AAAkCwH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD;AAAvH,KAAxB;AACA3qB,IAAAA,CAAC,CAAC2oB,MAAD,CAAD,GAAwB;AAAEsD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAAC4oB,KAAD,CAAD,GAAwB;AAAEqD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAAC6oB,OAAD,CAAD,GAAwB;AAAEoD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC+c,gBAAD;AAAvH,KAAxB;AACAxqB,IAAAA,CAAC,CAAC8oB,MAAD,CAAD,GAAwB;AAAEmD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC8c,OAAD;AAAvH,KAAxB;AACAvqB,IAAAA,CAAC,CAAC+oB,OAAD,CAAD,GAAwB;AAAEkD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACid,cAAD;AAAvH,KAAxB;AACA1qB,IAAAA,CAAC,CAACgpB,MAAD,CAAD,GAAwB;AAAEiD,MAAAA,aAAa,EAAEP,WAAjB;AAAkCQ,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACgd,KAAD;AAAvH,KAAxB;AACAzqB,IAAAA,CAAC,CAACipB,KAAD,CAAD,GAAwB;AAAEgD,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAACkpB,YAAD,CAAD,GAAwB;AAAE+C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAACmpB,WAAD,CAAD,GAAwB;AAAE8C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAACopB,OAAD,CAAD,GAAwB;AAAE6C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBO,wBAAlB,EAA4CI,6BAA5C;AAAvH,KAAxB;AACAjrB,IAAAA,CAAC,CAACqpB,KAAD,CAAD,GAAwB;AAAE4C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD,EAAkBM,wBAAlB;AAAvH,KAAxB;AACA5qB,IAAAA,CAAC,CAACspB,QAAD,CAAD,GAAwB;AAAE2C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACwd,6BAAD;AAAvH,KAAxB;AACAjrB,IAAAA,CAAC,CAACupB,OAAD,CAAD,GAAwB;AAAE0C,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,IAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,CAAL,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD,EAAUI,YAAV;AAAvH,KAAxB;AACA/qB,IAAAA,CAAC,CAACwpB,OAAD,CAAD,GAAwB;AAAEyC,MAAAA,aAAa,EAAEtH,IAAjB;AAAkCuH,MAAAA,eAAe,EAAE,KAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD;AAAvH,KAAxB;AACA3qB,IAAAA,CAAC,CAACypB,OAAD,CAAD,GAAwB;AAAEwC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC6c,eAAD;AAAvH,KAAxB;AACAtqB,IAAAA,CAAC,CAAC0pB,MAAD,CAAD,GAAwB;AAAEuC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4c,MAAD;AAAvH,KAAxB;AACArqB,IAAAA,CAAC,CAAC2pB,UAAD,CAAD,GAAwB;AAAEsC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACwd,6BAAD;AAAvH,KAAxB;AACAjrB,IAAAA,CAAC,CAAC4pB,QAAD,CAAD,GAAwB;AAAEqC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC+c,gBAAD;AAAvH,KAAxB;AACAxqB,IAAAA,CAAC,CAAC6pB,OAAD,CAAD,GAAwB;AAAEoC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC8c,OAAD;AAAvH,KAAxB;AACAvqB,IAAAA,CAAC,CAAC8pB,OAAD,CAAD,GAAwB;AAAEmC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACgd,KAAD;AAAvH,KAAxB;AACAzqB,IAAAA,CAAC,CAAC+pB,QAAD,CAAD,GAAwB;AAAEkC,MAAAA,aAAa,EAAEN,YAAjB;AAAkCO,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACid,cAAD;AAAvH,KAAxB,CA5DgC,CA6DhC;;AACA1qB,IAAAA,CAAC,CAACgqB,iBAAD,CAAD,GAAwB;AAAEiC,MAAAA,aAAa,EAAEnH,eAAjB;AAAkCoH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC+c,gBAAD,EAAmBE,cAAnB;AAAvH,KAAxB;AACA1qB,IAAAA,CAAC,CAACiqB,iBAAD,CAAD,GAAwB;AAAEgC,MAAAA,aAAa,EAAEnH,eAAjB;AAAkCoH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACid,cAAD;AAAvH,KAAxB;AACA1qB,IAAAA,CAAC,CAACkqB,kBAAD,CAAD,GAAwB;AAAE+B,MAAAA,aAAa,EAAEnH,eAAjB;AAAkCoH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAACkd,OAAD;AAAvH,KAAxB;AACA3qB,IAAAA,CAAC,CAACoqB,gBAAD,CAAD,GAAwB;AAAE6B,MAAAA,aAAa,EAAElH,aAAjB;AAAkCmH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC4d,mBAAD;AAAvH,KAAxB;AACArrB,IAAAA,CAAC,CAACmqB,iBAAD,CAAD,GAAwB;AAAE8B,MAAAA,aAAa,EAAElH,aAAjB;AAAkCmH,MAAAA,eAAe,EAAE,IAAnD;AAA0DC,MAAAA,iBAAiB,EAAE,KAA7E;AAAoFC,MAAAA,eAAe,EAAE,CAAC,CAAD,CAArG;AAAiH3e,MAAAA,IAAI,EAAE,CAAC2d,gCAAD;AAAvH,KAAxB;AAEAvpB,IAAAA,MAAM,CAAC4M,IAAP,CAAYzO,CAAZ,EAAeoO,OAAf,CAAuB,UAAS4d,cAAT,EAAyB;AAC9C,YAAMrK,IAAI,GAAG3hB,CAAC,CAACgsB,cAAD,CAAd;AACArK,MAAAA,IAAI,CAAC0K,kBAAL,GAA0B,EAA1B;AACA1K,MAAAA,IAAI,CAACyK,eAAL,CAAqBhe,OAArB,CAA6B,UAASge,eAAT,EAA0BlW,GAA1B,EAA+B;AAC1D,cAAMzI,IAAI,GAAGkU,IAAI,CAAClU,IAAL,CAAUyI,GAAV,CAAb;AACAyL,QAAAA,IAAI,CAAC0K,kBAAL,CAAwB5e,IAAxB,IAAgC2e,eAAhC;AACD,OAHD;AAID,KAPD;AAQAN,IAAAA,2BAA2B,GAAG9rB,CAA9B;AACD;;AACD,SAAO8rB,2BAA2B,CAACE,cAAD,CAAlC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,mCAAT,CAA6CN,cAA7C,EAA6Dve,IAA7D,EAAmE;AACjE,QAAMkU,IAAI,GAAGoK,4BAA4B,CAACC,cAAD,CAAzC;;AACA,MAAI,CAACrK,IAAL,EAAW;AACT,UAAM,yBAAN;AACD;;AACD,QAAMyK,eAAe,GAAGzK,IAAI,CAAC0K,kBAAL,CAAwB5e,IAAxB,CAAxB;;AACA,MAAI2e,eAAe,KAAK7d,SAAxB,EAAmC;AACjC,UAAM,yBAAN;AACD;;AACD,SAAO6d,eAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,iCAAT,CAA2CP,cAA3C,EAA2D;AACzD,QAAMrK,IAAI,GAAGoK,4BAA4B,CAACC,cAAD,CAAzC;;AACA,MAAI,CAACrK,IAAL,EAAW;AACT,UAAM,yBAAN;AACD;;AACD,SAAO;AACL6K,IAAAA,MAAM,EAAE7K,IAAI,CAACsK,aADR;AAELxe,IAAAA,IAAI,EAAEkU,IAAI,CAAClU,IAAL,CAAU,CAAV;AAFD,GAAP;AAID;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgf,UAAT,CAAoBne,KAApB,EAA2B;AACzB,SAAO,CAACA,KAAK,GAAIA,KAAK,GAAG,CAAlB,MAA0B,CAAjC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoe,iBAAT,CAA2Bzd,EAA3B,EAA+BmJ,KAA/B,EAAsCuC,MAAtC,EAA8CqR,cAA9C,EAA8D;AAC5D,MAAI,CAAC3I,QAAQ,CAACpU,EAAD,CAAb,EAAmB;AACjB,WAAOwd,UAAU,CAACrU,KAAD,CAAV,IAAqBqU,UAAU,CAAC9R,MAAD,CAAtC;AACD;;AACD,QAAMgH,IAAI,GAAGoK,4BAA4B,CAACC,cAAD,CAAzC;;AACA,MAAI,CAACrK,IAAL,EAAW;AACT,UAAM,yBAAN;AACD;;AACD,SAAOA,IAAI,CAACuK,eAAL,IAAwBvK,IAAI,CAACwK,iBAApC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,SAAT,CAAmBX,cAAnB,EAAmC;AACjC,QAAMrK,IAAI,GAAGoK,4BAA4B,CAACC,cAAD,CAAzC;;AACA,MAAI,CAACrK,IAAL,EAAW;AACT,UAAM,yBAAN;AACD;;AACD,SAAOA,IAAI,CAACwK,iBAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,yBAAT,CAAmCJ,MAAnC,EAA2C;AACzC,QAAM7K,IAAI,GAAGiK,UAAU,CAACY,MAAD,CAAvB;;AACA,MAAI,CAAC7K,IAAL,EAAW;AACT,UAAM,qBAAqB6K,MAA3B;AACD;;AACD,SAAO7K,IAAI,CAACkK,kBAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgB,0BAAT,CAAoC5d,EAApC,EAAwCd,GAAxC,EAA6C2e,WAA7C,EAA0D;AACxD,MAAI3I,eAAe,CAAChW,GAAD,CAAnB,EAA0B;AACxB,WAAOjB,sBAAsB,CAACiB,GAAD,CAA7B;AACD;;AACD,SAAO2e,WAAW,IAAIxC,eAAtB;AACD;;AAED,SAASyC,eAAT,CAAyB9d,EAAzB,EAA6BhG,MAA7B,EAAqCmP,KAArC,EAA4CuC,MAA5C,EAAoDnH,WAApD,EAAiE;AAC/D,MAAIA,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AACzB,UAAM,wBAAN;AACD;;AACD,MAAI,CAAC4E,KAAD,IAAU,CAACuC,MAAf,EAAuB;AACrB,UAAM5I,IAAI,GAAG5R,IAAI,CAACW,IAAL,CAAU0S,WAAW,IAAIvK,MAAM,KAAKmc,gBAAX,GAA8B,CAA9B,GAAkC,CAAtC,CAArB,CAAb;;AACA,QAAIrT,IAAI,GAAG,CAAP,KAAa,CAAjB,EAAoB;AAClBqG,MAAAA,KAAK,GAAGrG,IAAR;AACA4I,MAAAA,MAAM,GAAG5I,IAAT;AACD,KAHD,MAGO;AACLqG,MAAAA,KAAK,GAAG5E,WAAR;AACAmH,MAAAA,MAAM,GAAG,CAAT;AACD;AACF,GATD,MASO,IAAI,CAACA,MAAL,EAAa;AAClBA,IAAAA,MAAM,GAAGnH,WAAW,GAAG4E,KAAvB;;AACA,QAAIuC,MAAM,GAAG,CAAb,EAAgB;AACd,YAAM,wBAAN;AACD;AACF,GALM,MAKA,IAAI,CAACvC,KAAL,EAAY;AACjBA,IAAAA,KAAK,GAAG5E,WAAW,GAAGmH,MAAtB;;AACA,QAAIvC,KAAK,GAAG,CAAZ,EAAe;AACb,YAAM,wBAAN;AACD;AACF;;AACD,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELuC,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqS,sBAAT,CAAgC3Q,KAAhC,EAAuC;AACrC0H,EAAAA,UAAU,CAACC,YAAX,GAA0B,IAAInX,UAAJ,CAAe,CAACwP,KAAK,CAAC,CAAD,CAAL,GAAW,GAAZ,EAAiBA,KAAK,CAAC,CAAD,CAAL,GAAW,GAA5B,EAAiCA,KAAK,CAAC,CAAD,CAAL,GAAW,GAA5C,EAAiDA,KAAK,CAAC,CAAD,CAAL,GAAW,GAA5D,CAAf,CAA1B;AACD;;AAED,SAAS4Q,aAAT,CAAuBtc,WAAvB,EAAoC;AAClCnC,EAAAA,sBAAsB,CAACmC,WAAD,EAAcoT,UAAd,CAAtB;;AACA,MAAIpT,WAAW,CAACqT,YAAhB,EAA8B;AAC5BgJ,IAAAA,sBAAsB,CAACrc,WAAW,CAACqT,YAAb,CAAtB;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkJ,YAAT,CAAsBje,EAAtB,EAA0B6Q,OAA1B,EAAmC;AACjC,MAAIA,OAAO,CAACqN,oBAAR,KAAiC5e,SAArC,EAAgD;AAC9CU,IAAAA,EAAE,CAACme,WAAH,CAAexG,kCAAf,EAAmD9G,OAAO,CAACqN,oBAA3D;AACD;;AACD,MAAIrN,OAAO,CAACuN,gBAAR,KAA6B9e,SAAjC,EAA4C;AAC1CU,IAAAA,EAAE,CAACme,WAAH,CAAevG,8BAAf,EAA+C/G,OAAO,CAACuN,gBAAvD;AACD;;AACD,MAAIvN,OAAO,CAACwN,KAAR,KAAkB/e,SAAtB,EAAiC;AAC/BU,IAAAA,EAAE,CAACme,WAAH,CAAetG,mBAAf,EAAoChH,OAAO,CAACwN,KAA5C;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+Bte,EAA/B,EAAmC;AACjCA,EAAAA,EAAE,CAACme,WAAH,CAAe9G,gBAAf,EAAiC,CAAjC;;AACA,MAAIjD,QAAQ,CAACpU,EAAD,CAAZ,EAAkB;AAChBA,IAAAA,EAAE,CAACme,WAAH,CAAe7G,iBAAf,EAAkC,CAAlC;AACAtX,IAAAA,EAAE,CAACme,WAAH,CAAe5G,mBAAf,EAAoC,CAApC;AACAvX,IAAAA,EAAE,CAACme,WAAH,CAAe3G,kBAAf,EAAmC,CAAnC;AACAxX,IAAAA,EAAE,CAACm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AAU,GAAGjE,EAAE,CAAC+4B,eAAH,CAAmB7F,OAAnB,EAA4B5uB,EAA5B,CAAnB;;AACA,QAAI+vB,SAAS,CAACpwB,UAAD,CAAb,EAA2B;AACvB;AACH;;AACD,UAAMyqB,KAAK,GAAG1uB,EAAE,CAACg5B,iBAAH,CAAqB9F,OAArB,EAA8BjvB,UAAU,CAAC7E,IAAzC,CAAd;AACA,UAAMwwB,QAAQ,GAAGI,WAAW,CAAC/rB,UAAU,CAACzF,IAAZ,CAA5B;AACA,UAAMmwB,MAAM,GAAGiB,QAAQ,CAACjB,MAAT,CAAgB3uB,EAAhB,EAAoB0uB,KAApB,EAA2BkB,QAA3B,CAAf;AACAjB,IAAAA,MAAM,CAACnM,QAAP,GAAkBkM,KAAlB;AACAmK,IAAAA,aAAa,CAAC50B,UAAU,CAAC7E,IAAZ,CAAb,GAAiCuvB,MAAjC;AACD;;AAED,SAAOkK,aAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,aAAT,CAAuBrB,OAAvB,EAAgCtyB,OAAhC,EAAyC;AACvC,OAAK,MAAMlG,IAAX,IAAmBkG,OAAnB,EAA4B;AAC1B,UAAMqpB,MAAM,GAAGiJ,OAAO,CAACx4B,IAAD,CAAtB;;AACA,QAAIuvB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACrpB,OAAO,CAAClG,IAAD,CAAR,CAAN;AACD;AACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8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","file":"rocks.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/* @license twgl.js 4.19.1 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length$1(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nvar v3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  add: add,\n  copy: copy,\n  create: create,\n  cross: cross,\n  distance: distance,\n  distanceSq: distanceSq,\n  divide: divide,\n  divScalar: divScalar,\n  dot: dot,\n  lerp: lerp,\n  lerpV: lerpV,\n  length: length$1,\n  lengthSq: lengthSq,\n  max: max,\n  min: min,\n  mulScalar: mulScalar,\n  multiply: multiply,\n  negate: negate,\n  normalize: normalize,\n  setDefaultType: setDefaultType,\n  subtract: subtract\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType$1(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy$1(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply$1(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy$1(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || create();\n  yAxis = yAxis || create();\n  zAxis = zAxis || create();\n\n  normalize(\n      subtract(eye, target, zAxis), zAxis);\n  normalize(cross(up, zAxis, xAxis), xAxis);\n  normalize(cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nvar m4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  axisRotate: axisRotate,\n  axisRotation: axisRotation,\n  copy: copy$1,\n  frustum: frustum,\n  getAxis: getAxis,\n  getTranslation: getTranslation,\n  identity: identity,\n  inverse: inverse,\n  lookAt: lookAt,\n  multiply: multiply$1,\n  negate: negate$1,\n  ortho: ortho,\n  perspective: perspective,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  rotationX: rotationX,\n  rotationY: rotationY,\n  rotationZ: rotationZ,\n  scale: scale,\n  scaling: scaling,\n  setAxis: setAxis,\n  setDefaultType: setDefaultType$1,\n  setTranslation: setTranslation,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal,\n  transformPoint: transformPoint,\n  translate: translate,\n  translation: translation,\n  transpose: transpose\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nvar typedarrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getGLTypeForTypedArray: getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType: getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType: getTypedArrayTypeForGLType,\n  isArrayBuffer: isArrayBuffer\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let buffer;\n        let type;\n        let normalization;\n        let numComponents;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          const numValues = array.data || array;\n          const arrayType = array.type || Float32Array;\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(ARRAY_BUFFER, buffer);\n          gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n        } else {\n          const typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$1)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$1) return 2;  // eslint-disable-line\n  if (type === INT$1)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$1)   return 4;  // eslint-disable-line\n  if (type === FLOAT$1)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = getGLTypeForTypedArray(makeTypedArray(arrays.indices));\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nvar attributes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttribsFromArrays: createAttribsFromArrays,\n  createBuffersFromArrays: createBuffersFromArrays,\n  createBufferFromArray: createBufferFromArray,\n  createBufferFromTypedArray: createBufferFromTypedArray,\n  createBufferInfoFromArrays: createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray: setAttribInfoBufferFromArray,\n  setAttributePrefix: setAttributePrefix,\n  setAttributeDefaults_: setDefaults,\n  getNumComponents_: getNumComponents,\n  getArray_: getArray\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst getArray$1 = getArray;  // eslint-disable-line\nconst getNumComponents$1 = getNumComponents;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal$1(mi, v, dst) {\n  dst = dst || create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, inverse(matrix), transformNormal$1);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = add(multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray$1(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents$1(arrayInfo, name);\n      const array = getArray$1(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray$1(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray$1(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray$1(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray$1(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nvar primitives = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create3DFBufferInfo: create3DFBufferInfo,\n  create3DFBuffers: create3DFBuffers,\n  create3DFVertices: create3DFVertices,\n  createAugmentedTypedArray: createAugmentedTypedArray,\n  createCubeBufferInfo: createCubeBufferInfo,\n  createCubeBuffers: createCubeBuffers,\n  createCubeVertices: createCubeVertices,\n  createPlaneBufferInfo: createPlaneBufferInfo,\n  createPlaneBuffers: createPlaneBuffers,\n  createPlaneVertices: createPlaneVertices,\n  createSphereBufferInfo: createSphereBufferInfo,\n  createSphereBuffers: createSphereBuffers,\n  createSphereVertices: createSphereVertices,\n  createTruncatedConeBufferInfo: createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers: createTruncatedConeBuffers,\n  createTruncatedConeVertices: createTruncatedConeVertices,\n  createXYQuadBufferInfo: createXYQuadBufferInfo,\n  createXYQuadBuffers: createXYQuadBuffers,\n  createXYQuadVertices: createXYQuadVertices,\n  createCresentBufferInfo: createCresentBufferInfo,\n  createCresentBuffers: createCresentBuffers,\n  createCresentVertices: createCresentVertices,\n  createCrescentBufferInfo: createCrescentBufferInfo,\n  createCrescentBuffers: createCrescentBuffers,\n  createCrescentVertices: createCrescentVertices,\n  createCylinderBufferInfo: createCylinderBufferInfo,\n  createCylinderBuffers: createCylinderBuffers,\n  createCylinderVertices: createCylinderVertices,\n  createTorusBufferInfo: createTorusBufferInfo,\n  createTorusBuffers: createTorusBuffers,\n  createTorusVertices: createTorusVertices,\n  createDiscBufferInfo: createDiscBufferInfo,\n  createDiscBuffers: createDiscBuffers,\n  createDiscVertices: createDiscVertices,\n  deindexVertices: deindexVertices,\n  flattenNormals: flattenNormals,\n  makeRandomVertexColors: makeRandomVertexColors,\n  reorientDirections: reorientDirections,\n  reorientNormals: reorientNormals,\n  reorientPositions: reorientPositions,\n  reorientVertices: reorientVertices,\n  concatVertices: concatVertices,\n  duplicateVertices: duplicateVertices\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  glEnumToString: glEnumToString,\n  isWebGL1: isWebGL1,\n  isWebGL2: isWebGL2\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$1 = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer$1 = isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\n\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE$2                         = 0x1400;\nconst UNSIGNED_BYTE$2                = 0x1401;\nconst SHORT$2                        = 0x1402;\nconst UNSIGNED_SHORT$2               = 0x1403;\nconst INT$2                          = 0x1404;\nconst UNSIGNED_INT$2                 = 0x1405;\nconst FLOAT$2                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4$1       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1$1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5$1         = 0x8363;\nconst HALF_FLOAT$1                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV$1  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV$1 = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV$1     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV$1 = 0x8DAD;\nconst UNSIGNED_INT_24_8$1            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE$2, HALF_FLOAT$1, HALF_FLOAT_OES, FLOAT$2, UNSIGNED_SHORT_4_4_4_4$1, UNSIGNED_SHORT_5_5_5_1$1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT$2, UNSIGNED_SHORT$2], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE$2], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE$2], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT$2], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT$2], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT$2], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT$2], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE$2], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE$2], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT$2], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT$2], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT$2], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT$2], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_6_5$1], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE$2], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_10F_11F_11F_REV$1], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$2, HALF_FLOAT$1, UNSIGNED_INT_5_9_9_9_REV$1], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT$2], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE$2], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE$2], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT$2], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT$2], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT$2], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT$2], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_5_5_5_1$1, UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE$2, UNSIGNED_SHORT_4_4_4_4$1], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT$2, HALF_FLOAT$1], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT$2], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE$2], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE$2], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV$1], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT$2], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT$2], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT$2], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT$2], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT$2, UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$2], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$2], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8$1], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV$1], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer$1(src)) {\n    return getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE$2;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults$1.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults$1(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$1);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults$1.textureColor;\n  if (isArrayBuffer$1(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults$1.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults$1.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE$2, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder().forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$2;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer$1(src)) {\n    const Type = getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer$1(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer$1(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer$1(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nvar textures = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setTextureDefaults_: setDefaults$1,\n  createSampler: createSampler,\n  createSamplers: createSamplers,\n  setSamplerParameters: setSamplerParameters,\n  createTexture: createTexture,\n  setEmptyTexture: setEmptyTexture,\n  setTextureFromArray: setTextureFromArray,\n  loadTextureFromUrl: loadTextureFromUrl,\n  setTextureFromElement: setTextureFromElement,\n  setTextureFilteringForSize: setTextureFilteringForSize,\n  setTextureParameters: setTextureParameters,\n  setDefaultTextureColor: setDefaultTextureColor,\n  createTextures: createTextures,\n  resizeTexture: resizeTexture,\n  canGenerateMipmap: canGenerateMipmap,\n  canFilter: canFilter,\n  getNumComponentsForFormat: getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat: getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat: getFormatAndTypeForInternalFormat\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error$1 = error;\nconst warn$1 = warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER$1                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT$3                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT$3                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT$3                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP$1              = 0x8513;\nconst TEXTURE_3D$1                    = 0x806F;\nconst TEXTURE_2D_ARRAY$1              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT$3]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  };\ntypeMap[INT$3]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    };\ntypeMap[UNSIGNED_INT$3]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 16, setter: floatMat2Setter,  };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 36, setter: floatMat3Setter,  };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 24, setter: floatMat23Setter, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 24, setter: floatMat32Setter, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 32, setter: floatMat42Setter, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 48, setter: floatMat43Setter, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT$3, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT$3;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT$3]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT$3]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT$3]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  const errFn = opt_errorCallback || error$1;\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n\n  // Load the shader source\n  gl.shaderSource(shader, shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    errFn(`${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n  }\n\n  const options = {\n    errorCallback: opt_errorCallback || error$1,\n    transformFeedbackVaryings: transformFeedbackVaryings,\n    transformFeedbackMode: transformFeedbackMode,\n  };\n\n  if (opt_attribs) {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function(shader) {\n    gl.deleteShader(shader);\n  });\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const realShaders = [];\n  const newShaders = [];\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof (shader) === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n    if (isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  const program = gl.createProgram();\n  realShaders.forEach(function(shader) {\n    gl.attachShader(program, shader);\n  });\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n  let varyings = progOptions.transformFeedbackVaryings;\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || SEPARATE_ATTRIBS);\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(`${\n      realShaders.map(shader => {\n        const src = addLineNumbersWithError(gl.getShaderSource(shader), '', 0);\n        const type = gl.getShaderParameter(shader, gl.SHADER_TYPE);\n        return `${glEnumToString(gl, type)}\\n${src}}`;\n      }).join('\\n')\n    }\\nError in program linking: ${lastError}`);\n\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n  return program;\n}\n\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\nfunction createShaderFromScript(\n    gl, scriptId, opt_shaderType, opt_errorCallback) {\n  let shaderSource = \"\";\n  const shaderScript = getElementById(scriptId);\n  if (!shaderScript) {\n    throw new Error(`unknown script element: ${scriptId}`);\n  }\n  shaderSource = shaderScript.text;\n\n  const shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n  if (!shaderType) {\n    throw new Error('unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n    const shader = createShaderFromScript(\n        gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    const shader = loadShader(\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = { };\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n        continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      uniformSetters[name] = createUniformSetter(program, uniformInfo, location);\n    }\n  }\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    }\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, Type, typeSize, paddedSize, isArray) {\n  if (isArray) {\n    const numElements = typeSize / Type.BYTES_PER_ELEMENT;\n    const numPaddedElements = paddedSize / Type.BYTES_PER_ELEMENT;\n    return function(value) {\n      let dst = 0;\n      for (let src = 0; src < value.length; src += numElements) {\n        for (let i = 0; i < numElements; ++i) {\n          view[dst + i] = value[src + i];\n        }\n        dst += numPaddedElements;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn$1(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const paddedSize = pad(typeInfo.size, 16);\n    const length = typeInfo.size + (data.size - 1) * paddedSize;\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const uniformView = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    setters[name] = createUniformBlockUniformSetter(uniformView, Type, typeInfo.size, paddedSize, isArray);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer,\n    uniforms,\n    setters,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, values) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = arguments.length;\n  for (let aNdx = 1; aNdx < numArgs; ++aNdx) {\n    const values = arguments[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n        continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  let good = true;\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      const script = getElementById(source);\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n  if (!good) {\n    return null;\n  }\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n  return createProgramInfoFromProgram(gl, program);\n}\n\nvar programs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttributeSetters: createAttributeSetters,\n  createProgram: createProgram,\n  createProgramFromScripts: createProgramFromScripts,\n  createProgramFromSources: createProgramFromSources,\n  createProgramInfo: createProgramInfo,\n  createProgramInfoFromProgram: createProgramInfoFromProgram,\n  createUniformSetters: createUniformSetters,\n  createUniformBlockSpecFromProgram: createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram: createUniformBlockInfoFromProgram,\n  createUniformBlockInfo: createUniformBlockInfo,\n  createTransformFeedback: createTransformFeedback,\n  createTransformFeedbackInfo: createTransformFeedbackInfo,\n  bindTransformFeedbackInfo: bindTransformFeedbackInfo,\n  setAttributes: setAttributes,\n  setBuffersAndAttributes: setBuffersAndAttributes,\n  setUniforms: setUniforms,\n  setUniformsAndBindTextures: setUniformsAndBindTextures,\n  setUniformBlock: setUniformBlock,\n  setBlockUniforms: setBlockUniforms,\n  bindUniformBlock: bindUniformBlock\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT$3                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nvar draw = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  drawBufferInfo: drawBufferInfo,\n  drawObjectList: drawObjectList\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D$2                     = 0x0de1;\n\nconst UNSIGNED_BYTE$3                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT$1                = 0x1902;\nconst RGBA$1                           = 0x1908;\nconst DEPTH_COMPONENT24$1              = 0x81a6;\nconst DEPTH_COMPONENT32F$1             = 0x8cac;\nconst DEPTH24_STENCIL8$1               = 0x88f0;\nconst DEPTH32F_STENCIL8$1              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4$1                          = 0x8056;\nconst RGB5_A1$1                        = 0x8057;\nconst RGB565$1                         = 0x8D62;\nconst DEPTH_COMPONENT16$1              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL$1                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE$1                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR$1                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA$1, type: UNSIGNED_BYTE$3, min: LINEAR$1, wrap: CLAMP_TO_EDGE$1, },\n  { format: DEPTH_STENCIL$1, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F$1] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8$1] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4$1] = true;\nrenderbufferFormats[RGB5_A1$1] = true;\nrenderbufferFormats[RGB565$1] = true;\nrenderbufferFormats[DEPTH_STENCIL$1] = true;\nrenderbufferFormats[DEPTH_COMPONENT16$1] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  let colorAttachmentCount = 0;\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n  attachments.forEach(function(attachmentOptions) {\n    let attachment = attachmentOptions.attachment;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR$1;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR$1;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE$1;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE$1;\n        }\n        attachment = createTexture(gl, textureOptions);\n      }\n    }\n    if (isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D$2,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    if (isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n    } else if (isTexture(gl, attachment)) {\n      resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nvar framebuffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindFramebufferInfo: bindFramebufferInfo,\n  createFramebufferInfo: createFramebufferInfo,\n  resizeFramebufferInfo: resizeFramebufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER$2           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER$2, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nvar vertexArrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createVertexArrayInfo: createVertexArrayInfo,\n  createVAOAndSetAttributes: createVAOAndSetAttributes,\n  createVAOFromBufferInfo: createVAOFromBufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$2 = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults$2(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$2);\n  setDefaults(newDefaults);  // eslint-disable-line\n  setDefaults$1(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults$2.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport { addExtensionsToContext, attributes, bindFramebufferInfo, bindTransformFeedbackInfo, bindUniformBlock, canFilter, canGenerateMipmap, createAttribsFromArrays, createAttributeSetters, createBufferFromArray, createBufferFromTypedArray, createBufferInfoFromArrays, createBuffersFromArrays, createFramebufferInfo, createProgram, createProgramFromScripts, createProgramFromSources, createProgramInfo, createProgramInfoFromProgram, createSampler, createSamplers, createTexture, createTextures, createTransformFeedback, createTransformFeedbackInfo, createUniformBlockInfo, createUniformBlockInfoFromProgram, createUniformBlockSpecFromProgram, createUniformSetters, createVAOAndSetAttributes, createVAOFromBufferInfo, createVertexArrayInfo, draw, drawBufferInfo, drawObjectList, framebuffers, getArray as getArray_, getBytesPerElementForInternalFormat, getContext, getFormatAndTypeForInternalFormat, getGLTypeForTypedArray, getGLTypeForTypedArrayType, getNumComponentsForFormat, getNumComponents as getNumComponents_, getTypedArrayTypeForGLType, getWebGLContext, glEnumToString, isArrayBuffer, isWebGL1, isWebGL2, loadTextureFromUrl, m4, primitives, programs, resizeCanvasToDisplaySize, resizeFramebufferInfo, resizeTexture, setAttribInfoBufferFromArray, setDefaults as setAttributeDefaults_, setAttributePrefix, setAttributes, setBlockUniforms, setBuffersAndAttributes, setDefaultTextureColor, setDefaults$2 as setDefaults, setEmptyTexture, setSamplerParameters, setDefaults$1 as setTextureDefaults_, setTextureFilteringForSize, setTextureFromArray, setTextureFromElement, setTextureParameters, setUniformBlock, setUniforms, setUniformsAndBindTextures, textures, typedarrays, utils, v3, vertexArrays };\n","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\nuniform sampler2D prevStateCells;\\nuniform sampler2D prevStateFeromones;\\nuniform float tick;\\nuniform float u_time;\\nuniform vec2 u_resolution;\\nuniform vec2 u_mouse;\\nvarying vec2 uv;\\n\\n#define DECAY .001\\n#define rnd(x) fract(54321.987*sin(987.12345*x))\\n\\nvoid main() {\\n// init\\n// if(tick <= 1.) {\\n//   gl_FragColor = vec4(1. - step(.05, length(uv - .5)));\\n//   return;\\n// }\\n\\n// deposition\\nvec4 cell = texture2D(prevStateCells, uv);\\nif(length(cell) > 0.) {\\n  gl_FragColor.rg += clamp(cell.ba * .5 + .5, 0., 1.);\\n  gl_FragColor.a += 1.;\\n  return;\\n}\\n\\n// gl_FragColor = (texture2D(prevStateFeromones, uv, .1)) * .99;\\n// gl_FragColor = texelFetch(prevStateFeromones, ivec2(gl_FragCoord.xy), 0);\\n\\n//diffusion\\n#define diffCols 3.\\n#define diffR 1.\\nfor (int i = 0; i < int(diffCols * diffCols); i++) {\\n  vec2 ij = vec2(i/int(diffCols), mod(float(i), diffCols)) - (diffCols - 1.) / 2.;\\n  ij *= diffR;\\n  gl_FragColor += texture2D(prevStateFeromones, fract(uv + ij * 1. / u_resolution)) / diffCols / diffCols;\\n}\\n\\n// decay\\ngl_FragColor *= (1. - DECAY);\\n\\n// // spot limit\\n// gl_FragColor *= smoothstep(.5, .4, length(uv-.5));\\n\\n// // mouse interaction\\n// float mouseSpot = max(0., .1 - length(uv - u_mouse));\\n// gl_FragColor += clamp(gl_FragColor + mouseSpot * .1, 0., 1.);\\n}\";","module.exports=\"precision mediump float;\\nuniform sampler2D u_texture;\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D prevStateCells;\\nuniform sampler2D prevStateFeromones;\\nuniform float tick;\\nuniform float u_time;\\nuniform vec2 u_resolution;\\nuniform vec2 u_mouse;\\nvarying vec2 uv;\\n\\n// #define prevStateFeromones prevStateCells\\n#define R 4. // interaction radius\\n#define C 1. // max speed\\n#define LOOKUP_DIST (.01 * smoothstep(.0, .5, length(uv - u_mouse)))\\n#define LOOKUP_ANGLE 3.14159265 / 6.\\n#define rnd(x) fract(54321.987*sin(mod(987.12345 * x, 1.12345)))\\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\\n#define REPLICATION .01\\n#define REPULSION 1.\\n#define DIRECTED_FEROMONES 0\\n\\nvec2 turn(vec2 uv, vec2 v){\\nvec2 sensorL = uv+(rot(-LOOKUP_ANGLE)*v)*LOOKUP_DIST; // location of sensor A\\nvec2 sensorC = uv+v*LOOKUP_DIST;\\nvec2 sensorR = uv+(rot(LOOKUP_ANGLE)*v)*LOOKUP_DIST;\\n\\nfloat senseL, senseC, senseR;\\nif(DIRECTED_FEROMONES == 1) {\\n    senseL = dot(v, texture2D(prevStateFeromones, sensorL).rg);\\n    senseC = dot(v, texture2D(prevStateFeromones, sensorC).rg);\\n    senseR = dot(v, texture2D(prevStateFeromones, sensorR).rg);\\n}\\nelse {\\n    senseL = texture2D(prevStateFeromones, sensorL).a;\\n    senseC = texture2D(prevStateFeromones, sensorC).a;\\n    senseR = texture2D(prevStateFeromones, sensorR).a;\\n    // senseL = sensorL.x;\\n    // senseC = sensorC.x;\\n    // senseR = sensorR.x;\\n}\\n\\nif (senseC < senseL && senseC < senseR){\\nif(rnd(v.x)<.5)\\n    v*=rot(LOOKUP_ANGLE);\\nelse\\n    v*=rot(-LOOKUP_ANGLE);\\n}\\nelse if(senseL < senseR){\\n    v *= rot(-LOOKUP_ANGLE);\\n}\\nelse if(senseL > senseR){\\n    v *= rot(LOOKUP_ANGLE);\\n}\\nreturn v;\\n}\\n\\nvoid main(){\\n// gl_FragColor = vec4(vec3(length(uv)), 1);\\n  vec2 p_g, v_g;\\n  vec4 n,g;\\n  // if(mod(u_time, 2e5) <= .1) {\\n  if(tick <= 1.) {\\n      if(length(mod(vec2(gl_FragCoord.xy-.5), 10.)) == 0. && length(uv-.5) < .5)\\n          // gl_FragColor = vec4(.5, .5, -(uv + .5) * .5 + .5);\\n          gl_FragColor = vec4(.5, .5, .0, 1.);\\n          // gl_FragColor = vec4(.5, .5, (vec2(1,0) * rot(atan(uv.y, uv.x))) * .5 + .5);\\n          return;\\n      }\\n  float sig = rnd(length(uv)) > .5 ? 1. : -1.;\\n  for(float i = -C; i <= C; i++) {\\n  for(float j = -C; j <= C; j++) {\\n      vec2 ij = sig * vec2(i, j);\\n      vec2 uv_g = fract(uv + ij / u_resolution.xy);\\n      g = texture2D(prevStateCells,uv_g);\\n      if(length(g) == 0.) continue;\\n      p_g = g.rg + ij;\\n      v_g = g.ba;\\n      if(p_g + v_g == fract(p_g + v_g)){\\n      p_g = fract(p_g + v_g);\\n      v_g = turn(uv_g, v_g);\\n\\n      //v_g+=vec2(.0,.2)*rot(atan(uv.y-.5,uv.x-.5));\\n\\n      vec2 g_ij = ij;\\n      // for(float di=-R*sig;abs(di)<=R;di+=sig){\\n          // for(float dj=-R*sig;abs(dj)<=R;dj+=sig){\\n      for(float di=-R;di<=R;di+=1.){\\n          for(float dj=-R;dj<=R;dj+=1.){\\n              vec2 n_ij = vec2(g_ij.x + sig * di, g_ij.y + sig * dj);\\n              if(length(n_ij)>0.&&length(n_ij)<R){\\n                  vec2 uv_n=fract(uv+n_ij/u_resolution.xy);\\n                  n=texture2D(prevStateCells,uv_n);\\n                  if(length(n)==0.)continue;\\n                  vec2 p_n = n.rg+n_ij;\\n                  float dist=length(p_g-p_n);\\n                  v_g+=REPULSION * normalize(p_g - p_n) / (dist * dist);\\n              }\\n          }\\n      }\\n\\n      v_g = C * normalize(v_g);\\n      gl_FragColor=vec4(p_g,v_g);\\n      break;\\n      }\\n  }\\n  }\\n\\n  if(length(gl_FragColor)==0.){\\n      vec2 ij=vec2(.0,2.)*rot(3.14159265*.5*mod(tick,4.));\\n      vec4 n=texture2D(prevStateCells,fract(uv+ij/u_resolution.xy));\\n      if(length(n)==0.)\\n          return;\\n      if(rnd(length(uv)+fract(u_time))<REPLICATION)\\n          gl_FragColor=n;\\n  }\\n\\n}\\n\\n\";","module.exports=\"  precision mediump float;\\n#define GLSLIFY 1\\n\\n  varying vec2 uv;\\n  uniform vec2 u_resolution;\\n  uniform sampler2D prevStateCells;\\n  uniform sampler2D prevStateFeromones;\\n  #define rnd(x) fract(54321.987 * sin(987.12345 * x))\\n  void main() {\\n    gl_FragColor += step(1e-8, length(texture2D(prevStateCells, uv)));\\n    gl_FragColor.a = 1.;\\n    gl_FragColor.r += texture2D(prevStateFeromones, uv).a;\\n    gl_FragColor.gb += texture2D(prevStateFeromones, uv).rg;\\n    gl_FragColor = clamp(gl_FragColor, 0., 1.);\\n    // gl_FragColor = pow(gl_FragColor, vec4(4));\\n  }\";","'use strict';\nlet twgl = require('twgl.js')\n\nconst fFeromone = require('./feromone.frag');\nconst vCell = `\n  precision mediump float;\n\n  attribute vec2 position;\n  varying vec2 uv;\n\n  void main() {\n    uv = position * .5 + .5;\n    gl_Position = vec4(position, 0.0, 1.0);\n  }`;\nconst fCell = require('./cell.frag');\nconst fDraw = require('./draw.frag');\n\n\nconst mousepos = [0.5, 0.5];\nlet tick = 0\nconst canvas = document.getElementById('canvasgl');\nconst gl = twgl.getWebGLContext(canvas, { antialias: false, depth: false });\ntwgl.addExtensionsToContext(gl);\nconsole.log(gl.getExtension(\"OES_texture_float\"));\nconsole.log(gl.getExtension(\"WEBGL_color_buffer_float\"));\n\nconst programCell = twgl.createProgramInfo(gl, [vCell, fCell]);\nconst programFeromone = twgl.createProgramInfo(gl, [vCell, fFeromone]);\nconst programDraw = twgl.createProgramInfo(gl, [vCell, fDraw]);\n\nconst n = 800;\nconst m = n;\nconst attachments = [{ format:gl.RGBA, type:gl.FLOAT, minMag: gl.NEAREST, wrap: gl.CLAMP_TO_EDGE }];\nlet cell1 = twgl.createFramebufferInfo(gl, attachments, n, m);\nlet cell2 = twgl.createFramebufferInfo(gl, attachments, n, m);\nlet feromone1 = twgl.createFramebufferInfo(gl, attachments, n, m);\nlet feromone2 = twgl.createFramebufferInfo(gl, attachments, n, m);\nconst positionObject = { position: { data: [1, 1, 1, -1, -1, -1, -1, 1], numComponents: 2 } };\nconst positionBuffer = twgl.createBufferInfoFromArrays(gl, positionObject);\n\nconst pointData = [];\nfor (let i = 0; i < n; i++) {\n  for (let j = 0; j < m; j++) {\n    pointData.push(i / (n - 1));\n    pointData.push(j / (m - 1));\n  }\n}\nconst pointsObject = { v_texcoord: { data: pointData, numComponents: 2 } };\nconst pointsBuffer = twgl.createBufferInfoFromArrays(gl, pointsObject);\n\nlet dt;\nlet prevTime;\nlet temp;\nlet offGravity = 0;\nlet restoreColors = 0;\n\nfunction draw(time) {\n  twgl.resizeCanvasToDisplaySize(gl.canvas);\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  dt = (prevTime) ? time - prevTime : 0;\n  prevTime = time;\n\n  // feromones\n  gl.useProgram(programFeromone.program);\n  twgl.setBuffersAndAttributes(gl, programFeromone, positionBuffer);\n  twgl.setUniforms(programFeromone, {\n    prevStateCells: cell1.attachments[0],\n    prevStateFeromones: feromone1.attachments[0],\n    tick: tick,\n    u_time: new Date() / 1000,\n    u_resolution: [n, m],\n    u_mouse: mousepos,\n  });\n  twgl.bindFramebufferInfo(gl, feromone2);\n  twgl.drawBufferInfo(gl, positionBuffer, gl.TRIANGLE_FAN);\n\n\n  // cells\n  gl.useProgram(programCell.program);\n  twgl.setBuffersAndAttributes(gl, programCell, positionBuffer);\n  twgl.setUniforms(programCell, {\n    prevStateCells: cell1.attachments[0],\n    prevStateFeromones: feromone1.attachments[0],\n    tick: tick,\n    u_time: new Date() / 1000,\n    u_resolution: [n, m],\n    u_mouse: mousepos,\n  });\n  twgl.bindFramebufferInfo(gl, cell2);\n  twgl.drawBufferInfo(gl, positionBuffer, gl.TRIANGLE_FAN);\n\n  gl.useProgram(programDraw.program);\n  twgl.setBuffersAndAttributes(gl, programDraw, positionBuffer);\n  twgl.setUniforms(programDraw, {\n    prevStateCells: cell1.attachments[0],\n    prevStateFeromones: feromone1.attachments[0],\n  });\n  twgl.bindFramebufferInfo(gl, null);\n  twgl.drawBufferInfo(gl, positionBuffer, gl.TRIANGLE_FAN);\n\n\n\n  // ping-pong buffers\n  temp = cell1;\n  cell1 = cell2;\n  cell2 = temp;\n\n  temp = feromone1;\n  feromone1 = feromone2;\n  feromone2 = temp;\n\n  tick++\n}\n\n(function animate(now) {\n  draw(now / 1000);\n  // setTimeout(requestAnimationFrame, 50, animate);\n  requestAnimationFrame(animate);\n})(0);\n\nfunction setMousePos(e) {\n  mousepos[0] = e.clientX / gl.canvas.clientWidth;\n  mousepos[1] = 1 - e.clientY / gl.canvas.clientHeight;\n}\n\ncanvas.addEventListener('mousemove', setMousePos);\n\ncanvas.addEventListener('mouseleave', () => {\n  mousepos[0] = 999.;\n  mousepos[1] = 999.;\n});\n\ncanvas.addEventListener('mousedown', e => {\n  if (e.button === 0) {\n    offGravity = 1;\n  } else {\n    restoreColors = 1;\n  }\n});\n\nwindow.addEventListener('mouseup', () => {\n  offGravity = 0;\n  restoreColors = 0;\n});\n\nfunction handleTouch(e) {\n  e.preventDefault();\n  setMousePos(e.touches[0]);\n}\n\ncanvas.addEventListener('contextmenu', e => e.preventDefault());\ncanvas.addEventListener('touchstart', handleTouch, {passive: false});\ncanvas.addEventListener('touchmove', handleTouch, {passive: false});\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}